<?xml version="1.0" encoding="utf-8"?>
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:SQLite="clr-namespace:System.Data.SQLite;assembly=System.Data.SQLite"
	xmlns:local="clr-namespace:PasswordDatabase"
    xmlns:MyWindow="clr-namespace:PasswordDatabase"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
	x:Class="PasswordDatabase.MainWindow"
	Title="Password Database"
	Height="350"
	Width="525"
	Loaded="Window_Loaded" Closing="Window_Closing" SizeChanged="Window_SizeChanged" Icon="Resources/Logo.png">
    <Window.Resources>
        <System:Double x:Key="maxGridWIdth">200</System:Double>
        <LinearGradientBrush x:Key="GreenBrush" EndPoint="0,1" StartPoint="0,0">
            <LinearGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform Angle="-66.297" CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#FFC5FF9C"/>
            <GradientStop Color="#FF47D929" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="RedBrush" EndPoint="0,1" StartPoint="0,0">
            <LinearGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform Angle="-66.297" CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#FFFFA0A0"/>
            <GradientStop Color="#FFC0343A" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BlueBrush" EndPoint="0,1" StartPoint="0,0">
            <LinearGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform Angle="-66.297" CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#FF92B7FF"/>
            <GradientStop Color="#FF298DCA" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="YellowBrush" EndPoint="0,1" StartPoint="0,0">
            <LinearGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform Angle="-66.297" CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#FFF2F9D4"/>
            <GradientStop Color="#FFD8E032" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="YellowTextBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFE5E5C9" Offset="0"/>
            <GradientStop Color="#FFFFFFD7" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="PlusButton" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{StaticResource GreenBrush}"/>
        </Style>
        <Style x:Key="MinusButton" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{StaticResource RedBrush}"/>
        </Style>
        <Style x:Key="EditButton" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{StaticResource BlueBrush}" />
        </Style>
        <!--<Style TargetType="DataGridCell">
            <Setter Property="Background" Value="{StaticResource YellowTextBrush}" />
        </Style>-->
        <Style x:Key="textWrap">
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        </Style>
        <Style x:Key="SubCategoryStyle" TargetType="{x:Type Expander}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Expander.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" AutoReverse="True" RepeatBehavior="Forever" AccelerationRatio="0.5" Duration="0:0:1" From="#ACDB46" To="#60A7E0"></ColorAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Expander.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" AccelerationRatio="0.5" Duration="0:0:0.5" From="#E8E7CF" To="#FFE5E5E5"></ColorAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="Header" x:Name="Header" DataType="{x:Type Expander}">
            <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=Width}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBox Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="4" IsReadOnly="True"  Text="{Binding UpdateSourceTrigger=Explicit, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=Header}" Background="#FFF3F3F3" KeyDown="SubCategory_KeyDown"></TextBox>
                <Button Grid.Column="0" Grid.Row="0" Content="+" Style="{StaticResource PlusButton}" Click="AddSubCategoryClick"/>
                <Button Grid.Column="1" Grid.Row="0" Content="A" Style="{StaticResource EditButton}" Click="EditSubCategoryClick"/>
                <Button Grid.Column="2" Grid.Row="0" Content="-" Style="{StaticResource MinusButton}" Click="DeleteSubCategoryClick"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="RecordTemplate" x:Name="RecordTemplate">
            <DataGrid IsReadOnly="False" AutoGenerateColumns="False" 
                      ItemsSource="{Binding Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}, Path=DataContext}" 
                      MinColumnWidth="40" SelectionUnit="Cell" Loaded="DataGrid_Loaded"
                      CanUserAddRows="False" SourceUpdated="DataGrid_SourceUpdated" CanUserSortColumns="False" 
                      Unloaded="DataGrid_Unloaded" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#FAFADC"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#E6E69A"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FAFADC"/>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding [Login], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource textWrap}" Header="Login"/>
                    <DataGridTextColumn Binding="{Binding [Password], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource textWrap}" Header="Password"/>
                    <DataGridTextColumn Binding="{Binding [ElseData], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource textWrap}" Header="Else data"/>
                    <DataGridTemplateColumn x:Name="TemplateColumn" CanUserResize="False" MaxWidth="40">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <Button Content="+" Style="{StaticResource PlusButton}" Click="BAddRecordClick"></Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="-" Style="{StaticResource MinusButton}" Click="BRemoveRecordClick"></Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DataTemplate>
    </Window.Resources>
    <Grid x:Name="gMain" Background="#FFC8C8C8">
        <TabControl x:Name="Tabs" Background="#FFBA4747" BorderThickness="0" BorderBrush="AliceBlue">
            <TabItem Header="Account">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" x:Name="bDeleteAccount" Click="bDeleteAccount_Click" Width="100" Height="25" HorizontalAlignment="Right" VerticalAlignment="Top" Focusable="False" Style="{StaticResource MinusButton}">Delete account
                    </Button>
                    <Grid Grid.Row="0" Width="150" Height="100" VerticalAlignment="Bottom">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="Account"/>
                        <ComboBox Grid.Row="1" x:Name="cbAccount" IsTextSearchEnabled="False"/>
                        <Label Grid.Row="2" Content="Password"/>
                        <PasswordBox Grid.Row="3" x:Name="pbPassword"  ToolTip="Enter your password" Background="{StaticResource YellowTextBrush}"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="2" x:Name="bSignIn" Content="Sign In" Width="70" Height="30" ToolTip="Sign in existing account" Background="{StaticResource GreenBrush}" Click="BSignIn_Click"/>
                            <Button Grid.Column="1" x:Name="bApply" Content="Apply" Visibility="Hidden" Width="70" Height="30" ToolTip="Apply new account" Background="{StaticResource GreenBrush}" Click="bApply_Click"/>
                            <Button Grid.Column="0" x:Name="bSignUp" Content="Sign Up" Width="70" Height="30" ToolTip="Create new account" Background="{StaticResource GreenBrush}" Click="BSignUp_Click"/>
                        </Grid>
                        <Button Grid.Row="1" x:Name="BSignOut" Content="Sign Out" Width="70" Height="30" IsEnabled="False" Background="{StaticResource BlueBrush}" Click="BSignOut_Click"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Data" x:Name="TabData" IsEnabled="False">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition  Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="60"/>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="Category:" />
                        <ComboBox ItemsSource="{Binding NotifyOnSourceUpdated=True, Mode=TwoWay, RelativeSource={RelativeSource Mode=Self}, Path=DataContext}" DisplayMemberPath="[Category]" SelectedValuePath="[Category]"  Grid.Column="1" x:Name="CBCategory" KeyDown="CBCategory_KeyDown" SelectionChanged="CBCategory_SelectionChanged">
                        </ComboBox>
                        <Button Grid.Column="2" x:Name="BAddCategory" Content="Add" Click="BAddCategory_Click" Style="{StaticResource PlusButton}"/>
                        <Button Grid.Column="3" x:Name="BEditCategory" Content="Edit" Click="BEditCategory_Click" Style="{StaticResource EditButton}"/>
                        <Button Grid.Column="4" x:Name="BDeleteCategory" Content="Delete" Click="BDeleteCategory_Click" Style="{StaticResource MinusButton}"/>
                    </Grid>
                    <ScrollViewer Grid.Row="1" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <Grid x:Name="gSubCategories">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Expander x:Name="expander" Header="My Sub Category" HeaderTemplate="{StaticResource Header}" Style="{StaticResource SubCategoryStyle}">
                                <Grid Background="#FFE5E5E5">
                                    <ContentControl ContentTemplate="{StaticResource RecordTemplate}"/>
                                </Grid>
                            </Expander>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
